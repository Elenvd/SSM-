<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.desinf.classMana.dao.ScoreMapper">
  <resultMap id="BaseResultMap" type="cn.desinf.classMana.bean.Score">
    <result column="cou_id" jdbcType="VARCHAR" property="couId" />
    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="sco_sco" jdbcType="INTEGER" property="scoSco" />
    <result column="sco_att" jdbcType="INTEGER" property="scoAtt" />
  </resultMap>
  <resultMap id="withCouAndStu" type="cn.desinf.classMana.bean.Score">
    <result column="cou_id" jdbcType="VARCHAR" property="couId" />
    <result column="stu_id" jdbcType="VARCHAR" property="stuId" />
    <result column="sco_sco" jdbcType="INTEGER" property="scoSco" />
    <result column="sco_att" jdbcType="INTEGER" property="scoAtt" />
    <association property="student" javaType="cn.desinf.classMana.bean.Student">
    	<id column="stu_id" jdbcType="VARCHAR" property="stuId"/>
    	<result column="stu_name" jdbcType="VARCHAR" property="stuName"/>
    </association>
    <association property="course" javaType="cn.desinf.classMana.bean.Course">
    	<id column="cou_id" jdbcType="VARCHAR" property="couId"/>
    	<result column="cou_name" jdbcType="VARCHAR" property="couName"/>
    </association>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cou_id, stu_id, sco_sco, sco_att
  </sql>
  <sql id="With_Cou_Stu_List">
  	sc.cou_id,c.cou_name,sc.stu_id,s.stu_name,sc.sco_sco,sc.sco_att
  </sql>
  <!-- List<Score> selectWithCouAndStu(String couId); -->
  <select id="selectWithCouAndStu" resultMap="withCouAndStu">
  	select
  	<include refid="With_Cou_Stu_List"></include>
  	from score sc
	LEFT JOIN course c on sc.cou_id=c.cou_id
	LEFT JOIN student s ON sc.stu_id=s.stu_id
	where sc.cou_id=#{couId,jdbcType=VARCHAR}
  </select>
  <!-- List<Score> selectWithStuId(String stuId); -->
  <select id="selectWithStuId" resultMap="withCouAndStu">
  	select
  	<include refid="With_Cou_Stu_List"></include>
  	from score sc
	LEFT JOIN course c on sc.cou_id=c.cou_id
	LEFT JOIN student s ON sc.stu_id=s.stu_id
	where sc.stu_id=#{stuId,jdbcType=VARCHAR}
  </select>
  <select id="selectByExample" parameterType="cn.desinf.classMana.bean.ScoreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.desinf.classMana.bean.ScoreExample">
    delete from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!-- int deleteByStuId(String couId,String stuId); -->
  <delete id="deleteByStuId" parameterType="java.lang.String">
  	DELETE  from score
  	where cou_id=#{couId,jdbcType=VARCHAR} and stu_id=#{stuId,jdbcType=VARCHAR}
  </delete> 
  <insert id="insert" parameterType="cn.desinf.classMana.bean.Score">
    insert into score (cou_id, stu_id, sco_sco, 
      sco_att)
    values (#{couId,jdbcType=VARCHAR}, #{stuId,jdbcType=VARCHAR}, #{scoSco,jdbcType=INTEGER}, 
      #{scoAtt,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.desinf.classMana.bean.Score">
    insert into score
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="couId != null">
        cou_id,
      </if>
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="scoSco != null">
        sco_sco,
      </if>
      <if test="scoAtt != null">
        sco_att,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="couId != null">
        #{couId,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null">
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="scoSco != null">
        #{scoSco,jdbcType=INTEGER},
      </if>
      <if test="scoAtt != null">
        #{scoAtt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.desinf.classMana.bean.ScoreExample" resultType="java.lang.Long">
    select count(*) from score
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update score
    <set>
      <if test="record.couId != null">
        cou_id = #{record.couId,jdbcType=VARCHAR},
      </if>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=VARCHAR},
      </if>
      <if test="record.scoSco != null">
        sco_sco = #{record.scoSco,jdbcType=INTEGER},
      </if>
      <if test="record.scoAtt != null">
        sco_att = #{record.scoAtt,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update score
    set cou_id = #{record.couId,jdbcType=VARCHAR},
      stu_id = #{record.stuId,jdbcType=VARCHAR},
      sco_sco = #{record.scoSco,jdbcType=INTEGER},
      sco_att = #{record.scoAtt,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>